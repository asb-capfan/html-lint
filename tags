!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CONSTRUCTOR_METHOD_ARRAYREF	t/20-error-types-skip.t	/^CONSTRUCTOR_METHOD_ARRAYREF: {$/;"	l
CONSTRUCTOR_METHOD_SCALAR	t/20-error-types-skip.t	/^CONSTRUCTOR_METHOD_SCALAR: {$/;"	l
FLUFF	lib/HTML/Lint/Error.pm	/^use constant FLUFF      => 3;$/;"	c
FUNC_METHOD	t/20-error-types-skip.t	/^FUNC_METHOD: {$/;"	l
HELPER	lib/HTML/Lint/Error.pm	/^use constant HELPER     => 2;$/;"	c
HTML::Lint	lib/HTML/Lint.pm	/^package HTML::Lint;$/;"	p
HTML::Lint::Error	lib/HTML/Lint/Error.pm	/^package HTML::Lint::Error;$/;"	p
HTML::Lint::HTML4	lib/HTML/Lint/HTML4.pm	/^package HTML::Lint::HTML4;$/;"	p
HTML::Lint::Parser	lib/HTML/Lint.pm	/^package HTML::Lint::Parser;$/;"	p
STRUCTURE	lib/HTML/Lint/Error.pm	/^use constant STRUCTURE  => 1;$/;"	c
TODO	t/10-test-html-lint.t	/^TODO: { # undef should fail$/;"	l
Test::HTML::Lint	lib/Test/HTML/Lint.pm	/^package Test::HTML::Lint;$/;"	p
_element_pop_back_to	lib/HTML/Lint.pm	/^sub _element_pop_back_to {$/;"	s
_element_push	lib/HTML/Lint.pm	/^sub _element_push {$/;"	s
_end	lib/HTML/Lint.pm	/^sub _end {$/;"	s
_end_document	lib/HTML/Lint.pm	/^sub _end_document {$/;"	s
_expand_error	lib/HTML/Lint/Error.pm	/^sub _expand_error {$/;"	s
_find_tag_in_stack	lib/HTML/Lint.pm	/^sub _find_tag_in_stack {$/;"	s
_hash	lib/HTML/Lint/HTML4.pm	/^sub _hash   { my %hash; @hash{@_} = (1) x scalar @_; return \\%hash; }$/;"	s
_ie_only	lib/HTML/Lint/HTML4.pm	/^sub _ie_only { return @_ };$/;"	s
_in_context	lib/HTML/Lint.pm	/^sub _in_context {$/;"	s
_ns_only	lib/HTML/Lint/HTML4.pm	/^sub _ns_only { return @_ };$/;"	s
_parser	lib/HTML/Lint.pm	/^sub _parser {$/;"	s
_start	lib/HTML/Lint.pm	/^sub _start {$/;"	s
_start_document	lib/HTML/Lint.pm	/^sub _start_document {$/;"	s
_start_img	lib/HTML/Lint.pm	/^sub _start_img {$/;"	s
_text	lib/HTML/Lint.pm	/^sub _text {$/;"	s
as_string	lib/HTML/Lint/Error.pm	/^sub as_string {$/;"	s
checkit	t/LintTest.pl	/^sub checkit {$/;"	s
clear_errors	lib/HTML/Lint.pm	/^sub clear_errors {$/;"	s
column	lib/HTML/Lint/Error.pm	/^sub column      { my $self = shift; return $self->{_column}     || '' }$/;"	s
eof	lib/HTML/Lint.pm	/^sub eof {$/;"	s
errcode	lib/HTML/Lint/Error.pm	/^sub errcode     { my $self = shift; return $self->{_errcode}    || '' }$/;"	s
errors	lib/HTML/Lint.pm	/^sub errors {$/;"	s
errtext	lib/HTML/Lint/Error.pm	/^sub errtext     { my $self = shift; return $self->{_errtext}    || '' }$/;"	s
file	lib/HTML/Lint/Error.pm	/^sub file        { my $self = shift; return $self->{_file}       || '' }$/;"	s
get_paragraphed_files	t/LintTest.pl	/^sub get_paragraphed_files {$/;"	s
gripe	lib/HTML/Lint.pm	/^sub gripe {$/;"	s
html_ok	lib/Test/HTML/Lint.pm	/^sub html_ok {$/;"	s
import	lib/Test/HTML/Lint.pm	/^sub import {$/;"	s
is_type	lib/HTML/Lint/Error.pm	/^sub is_type {$/;"	s
line	lib/HTML/Lint/Error.pm	/^sub line        { my $self = shift; return $self->{_line}       || '' }$/;"	s
new	lib/HTML/Lint.pm	/^sub new {$/;"	s
new	lib/HTML/Lint/Error.pm	/^sub new {$/;"	s
newfile	lib/HTML/Lint.pm	/^sub newfile {$/;"	s
only_types	lib/HTML/Lint.pm	/^sub only_types {$/;"	s
parse	lib/HTML/Lint.pm	/^sub parse {$/;"	s
parse_file	lib/HTML/Lint.pm	/^sub parse_file {$/;"	s
type	lib/HTML/Lint/Error.pm	/^sub type        { my $self = shift; return $self->{_type}       || '' }$/;"	s
where	lib/HTML/Lint/Error.pm	/^sub where {$/;"	s
